{"src/lib/components/LineLayer.react.js": {"description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.", "displayName": "deckglplotly", "methods": [{"name": "_renderTooltip", "docblock": null, "modifiers": [], "params": [], "returns": null}, {"name": "_onViewStateChange", "docblock": null, "modifiers": [], "params": [{"name": "{viewState}", "type": null}], "returns": null}], "props": {"id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks"}, "setProps": {"type": {"name": "func"}, "required": false, "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"}, "longitude": {"type": {"name": "number"}, "required": false, "description": "Inital view state logitude"}, "latitude": {"type": {"name": "number"}, "required": false, "description": "Inital view state latitude"}, "zoom": {"type": {"name": "number"}, "required": false, "description": "Inital view state zoom"}, "data": {"type": {"name": "object"}, "required": false, "description": "The data carries geographical and contextual information.\nNecessary keys:\n- sourcePosition => [lat, long]\n- targetPosition => [lat, long]\n- color =>  [r, b, g, a]\n- width =>  width size\nOptional Keys:\n- legend_title => tooltip information title\n- legend_data => tooltip information data\n\nExample:\n[{\"sourcePosition\": [-56.256744, -34.8749], \n \"targetPosition\": [-56.255649, -34.874753], \n \"color\": [96, 41, 243, 203], \n \"width\": 2}, ...]"}, "mapboxtoken": {"type": {"name": "string"}, "required": false, "description": "Mapbox token to load the map"}}}, "src/lib/components/ScatterplotLayer.react.js": {"description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.", "displayName": "deckglplotly", "methods": [{"name": "_renderTooltip", "docblock": null, "modifiers": [], "params": [], "returns": null}, {"name": "_onViewStateChange", "docblock": null, "modifiers": [], "params": [{"name": "{viewState}", "type": null}], "returns": null}], "props": {"id": {"type": {"name": "string"}, "required": false, "description": "The ID used to identify this component in Dash callbacks"}, "initial_longitude": {"type": {"name": "number"}, "required": false, "description": "Inital view state logitude"}, "initial_latitude": {"type": {"name": "number"}, "required": false, "description": "Inital view state latitude"}, "initial_zoom": {"type": {"name": "number"}, "required": false, "description": "Inital view state zoom"}, "data": {"type": {"name": "object"}, "required": false, "description": "The data carries geographical and contextual information.\nNecessary keys:\n- position => [lat, long]\n- color =>  [r, b, g, a]\n- radius =>  radius size\nOptional Keys:\n- legend_title => tooltip information title\n- legend_data => tooltip information data\n\nExample:\n[{\"position\": [-56.256744, -34.8749],  \n \"color\": [96, 41, 243, 203], \n \"radius\": 2}, ...]"}, "mapboxtoken": {"type": {"name": "string"}, "required": false, "description": "Mapbox token to load the map"}}}}